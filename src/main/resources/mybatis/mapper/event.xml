<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.letsparty.mapper.EventMapper">
	
	<insert id="insertEvent" parameterType="com.letsparty.vo.Event" useGeneratedKeys="true" keyProperty="id">
		insert into event
			(party_no, user_id, event_title, event_description, event_status, is_all_day, event_start, event_end,
			post_id, place_no)
		values
			(#{party.no}, #{user.id}, #{title}, #{description}, #{status}, #{allDay}, #{start}, #{end},
			<choose>
				<when test="post != null">
					#{post.id}
				</when>
				<otherwise>
					null
				</otherwise>
			</choose>,
			<choose>
				<when test="place != null">
					#{place.no}
				</when>
				<otherwise>
					null
				</otherwise>
			</choose>)
	</insert>
	
	<update id="updateEvent" parameterType="com.letsparty.vo.Event">
		update event
		set 
			event_title = #{title},
			event_description = #{description},
			is_all_day = #{allDay},
			event_start = #{start},
			event_end = #{end}
		where 
			event_no = #{id}
	</update>
	
	<select id="getEvents" parameterType="map" resultType="com.letsparty.vo.Event">
		select
			event_no 			as id,
			user_id				as "user.id",
			event_title			as title,
			event_description 	as description,
			event_status		as status,
			is_all_day			as allDay,
			event_start			as start,
			event_end			as end,
			post_id				as "post.id",
			place_no			as "place.no"
		from 
			event
		where
			party_no = #{partyNo} AND
			event_end >= #{startDate} or
			event_start &lt; #{endDate}
	</select>
	
	<select id="getEventByNo" parameterType="int" resultType="com.letsparty.vo.Event">
		select
			event_no 			as id,
			user_id				as "user.id",
			event_title			as title,
			event_description 	as description,
			event_status		as status,
			is_all_day			as allDay,
			event_start			as start,
			event_end			as end,
			post_id				as "post_id",
			place_no			as "place.no"
		from 
			event
		where 
			event_no = #{value}
	</select>
	
	<select id="getEventsByPartyNo" parameterType="int" resultType="com.letsparty.vo.Event">
		SELECT
			event_no 			as id,
			event_title			as title,
			event_description 	as description,
			is_all_day			as allDay,
			event_start			as start,
			event_end			as end,
			event_status		as status
		FROM event
		WHERE
			party_no = #{value} AND 
			event_start > CURDATE() AND
			event_start &lt;= DATE_ADD(CURDATE(), INTERVAL 15 DAY)
		ORDER BY event_start
		LIMIT 5;
	</select>
	
	<delete id="deleteEvent" parameterType="int">
		delete from
			event
		where 
			event_no = #{value}
	</delete>
</mapper>