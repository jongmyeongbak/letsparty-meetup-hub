<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.letsparty.mapper.UserPartyApplicationMapper">

	<insert id="insert"	parameterType="UserPartyApplication" useGeneratedKeys="true" keyProperty="no">
		INSERT INTO user_party_application
		(party_no, user_id, role_no, profile_no, application_status, user_remark)
		VALUES
		(#{party.no}, #{user.id}, #{roleNo}, #{userProfile.no}, #{status}, #{userRemark})
	</insert>

	<select id="findByNo" parameterType="long" resultType="UserPartyApplication">
		SELECT
			upa.application_no as no,
			upa.party_no as "party.no",
			upa.user_id as "user.id",
			upa.role_no,
			upa.application_status as status,
			upa.created_at,
			upa.user_remark,
			up.profile_no as "userProfile.no",
<!-- 			up.user_id as "userProfile.id", -->
			up.profile_nickname as "userProfile.nickname",
			up.image_filename as "userProfile.filename",
			up.is_default as "userProfile.isDefault",
			up.is_default as "userProfile.isUrl"
		FROM user_party_application upa
		INNER JOIN user_profile up ON upa.profile_no = up.profile_no
		WHERE upa.application_no = #{value}
	</select>
	
	<select id="findByPartyNoAndUserId" resultType="UserPartyApplication">
		SELECT
			upa.application_no as no,
			upa.party_no as "party.no",
			upa.user_id as "user.id",
			upa.role_no,
			upa.application_status as status,
			upa.created_at,
			upa.user_remark,
			up.profile_no as "userProfile.no",
<!-- 			up.user_id as "userProfile.id", -->
			up.profile_nickname as "userProfile.nickname",
			up.image_filename as "userProfile.filename",
			up.is_default as "userProfile.isDefault",
			up.is_url as "userProfile.isUrl"
		FROM user_party_application upa
		INNER JOIN user_profile up ON upa.profile_no = up.profile_no
		WHERE upa.party_no = #{partyNo}
		AND upa.user_id = #{userId}
		AND upa.application_status = '승인'
	</select>

	<select id="findAllByPartyNo" parameterType="int" resultType="UserPartyApplication">
		SELECT
			upa.application_no as no,
			upa.party_no as "party.no",
			upa.user_id as "user.id",
			upa.role_no,
			upa.application_status as status,
			upa.created_at,
			upa.user_remark,
			up.profile_no as "userProfile.no",
<!-- 			up.user_id as "userProfile.id", -->
			up.profile_nickname as "userProfile.nickname",
			up.image_filename as "userProfile.filename",
			up.is_default as "userProfile.isDefault",
			up.is_default as "userProfile.isUrl"
		FROM user_party_application upa
		INNER JOIN user_profile up ON upa.profile_no = up.profile_no
		WHERE upa.party_no = #{value}
		ORDER BY
			role_no, "userProfile.nickname"
	</select>

	<select id="findAllWithUserNoByPartyNoAndStatus" resultType="UserPartyApplication">
		SELECT
			upa.application_no as no,
			upa.party_no as "party.no",
			upa.role_no,
			upa.application_status as status,
			upa.created_at,
			upa.user_remark,
			upa.profile_no as "userProfile.no",
<!-- 			up.user_id as "userProfile.id", -->
			up.profile_nickname as "userProfile.nickname",
			up.image_filename as "userProfile.filename",
			up.is_default as "userProfile.isDefault",
			up.is_url as "userProfile.isUrl",
			upa.user_id as "user.id",
			u.user_no as "user.no"
		FROM user_party_application upa
		INNER JOIN user_profile up ON upa.profile_no = up.profile_no
		INNER JOIN user u ON upa.user_id = u.user_id
		WHERE upa.party_no = #{partyNo}
		AND upa.application_status = #{status}
		ORDER BY
			<choose>
				<when test="myNo != null">
					CASE WHEN u.user_no = #{myNo} THEN 0 ELSE 1 END,
				</when>
			</choose>
			role_no, "userProfile.nickname"
	</select>
	

	<select id="countPartyMemberByPartyNoAndStatus" resultType="int">
		SELECT COUNT(*)
		FROM user_party_application
		WHERE party_no = #{partyNo}
		AND application_status = #{status};
  	</select>
    
	<!-- 사용자가 리더인 파티들 조회 -->
	<select id="findAllExceptMemberByUserId" parameterType="string" resultType="UserPartyApplication">
		select 
			upa.application_no	as no,
			upa.party_no		as "party.no",
			upa.user_id		 	as "user.id",
			upa.role_no			as roleNo, 
			p.party_name		as "party.name",
			p.party_filename	as "party.filename", 
			p.category_no		as "party.category.no"
		from 
			user_party_application upa
		inner join party p on upa.party_no = p.party_no
		where user_id = #{value}
		and role_no != 8
		and application_status = '승인';
	</select>
	
	<!-- 리더를 제외한 현재 파티 멤버의 수 -->
	<select id="countApprovedMember" resultType="int">
		select count(*) 
		from user_party_application 
		where party_no = #{partyNo} 
		and application_status = '승인';
	</select>
	
	<select id="findAllByUserId" parameterType="string" resultType="UserPartyApplication">
		SELECT 
			upa.application_no	as no,
			upa.party_no		as "party.no",
			upa.user_id		 	as "user.id",
			upa.role_no			as roleNo, 
			p.party_name		as "party.name",
			p.party_filename	as "party.filename",
			up.profile_nickname	as "userProfile.nickname",
			up.profile_no		as "userProfile.no"
		FROM 
			user_party_application upa
		JOIN party p ON upa.party_no = p.party_no
		JOIN user_profile up ON upa.profile_no = up.profile_no
		WHERE upa.user_id = #{value}
		AND application_status = '승인';
	</select>
	

	<update id="update" parameterType="UserPartyApplication">
		UPDATE user_party_application
		SET
			role_no = #{roleNo},
			profile_no = #{userProfile.no},
			application_status = #{status},
			user_remark	= #{userRemark}
		WHERE
			application_no = #{no}
	</update>
	
	
	<delete id="withdraw" parameterType="int">
		DELETE FROM 
			user_party_application
		WHERE 
			application_no = #{value};
	</delete>

</mapper>